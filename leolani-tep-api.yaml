openapi: 3.0.3
info:
  title: TEP REST API
  description: |-
    REST API specification for integration of TEP components

    Some useful links:
    - [The repository](https://github.com/hi-tep/tep-rest-api)
    - [Leolani](https://github.com/leolani)
    - [EMISSOR](https://github.com/leolani/emissor)
  termsOfService: https://swagger.io/terms/
  contact:
    email: p.t.j.m.vossen@vu.nl
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
tags:
  - name: scenario
    externalDocs:
      description: Scenario in the EMISSOR framework
      url: https://github.com/leolani/emissor
paths:
  /scenario/{scenarioId}:
    put:
      summary: Start a new interaction
      tags:
        - scenario
      operationId: startScenario
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioContext'
      responses:
        '200':
          description: Successfully started an interaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioContext'
        '403':
          description: There is already an ongoing interaction
    get:
      summary: Retrieve an interaction
      tags:
        - scenario
      operationId: getScenario
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      responses:
        '200':
          description: The metadata of the interaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: IRI of the location.
                    example: "https://example.com/image.jpg"
                  user:
                    type: string
                    description: IRI identifying the user
                    example: "https://example.com/ontology/king/tubby"
        '404':
          description: There is no such interaction stored
  /scenario/current:
    get:
      summary: Retrieve an interaction
      tags:
        - scenario
      operationId: getScenario
      responses:
        '200':
          description: The metadata of the interaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                    description: IRI of the location.
                    example: "https://example.com/image.jpg"
                  user:
                    type: string
                    description: IRI identifying the user
                    example: "https://example.com/ontology/king/tubby"
        '404':
          description: There is no active interaction
  /scenario/{scenarioID}/gaze:
    post:
      summary: Submit gaze information of the user
      tags:
        - gaze
      operationId: submitGaze
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: IRI of the image where the bounding box is located.
                  example: "https://example.com/image.jpg"
                entity:
                  type: string
                  description: IRI of the entity contained in the bounding box
                  example: "https://example.com/ontology/king-tubby"
                boundingBox:
                  $ref: '#/components/schemas/BoundingBox'
      responses:
        '200':
          description: Successfully submitted gaze information
        '403':
          description: The submitted scenario is not active
components:
  parameters:
    scenarioId:
      name: scenarioId
      description: The unique identifier for the interaction
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: "ee6ce14a-94e4-4ddd-ac60-d1e0262f0274"
  schemas:
    ScenarioContext:
      type: object
      description: Contextual meta-data of the interaction
      required:
        - user
        - location
      properties:
        id:
          type: string
          format: uuid
          description: The scenario identifier
          example: "ee6ce14a-94e4-4ddd-ac60-d1e0262f0274"
        location:
          type: string
          description: IRI of the location where the interaction takes place
          example: "https://example.com/museum"
        user:
          type: string
          description: IRI identifying the user
          example: "https://example.com/ontology/alice"
        start:
          type: string
          format: date-time
          description: Start date of the interaction
        end:
          type: string
          format: date-time
          description: Start date of the interaction
    BoundingBox:
      type: object
      required:
        - bottomLeft
        - topRight
      properties:
        bottomLeft:
          $ref: '#/components/schemas/Coordinate'
        topRight:
          $ref: '#/components/schemas/Coordinate'
    Coordinate:
      type: object
      description: Pixel-Coordinates of a point in the image
      required:
        - x
        - y
      properties:
        x:
          type: number
          example: 1.0
        y:
          type: number
          example: 2.0
