openapi: 3.0.3
info:
  title: TEP REST API
  description: |-
    REST API specification for integration of TEP components

    Some useful links:
    - [The repository](https://github.com/hi-tep/tep-rest-api)
    - [Leolani](https://github.com/leolani)
    - [EMISSOR](https://github.com/leolani/emissor)
  termsOfService: https://swagger.io/terms/
  contact:
    email: p.t.j.m.vossen@vu.nl
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io
tags:
  - name: scenario
    externalDocs:
      description: Scenario in the EMISSOR framework
      url: https://github.com/leolani/emissor
paths:
  /scenario/{scenarioId}:
    put:
      summary: Start a new interaction
      tags:
        - scenario
      operationId: startScenario
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioContext'
      responses:
        '200':
          description: Successfully started an interaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioContext'
        '403':
          description: There is already an ongoing interaction
    get:
      summary: Retrieve an interaction
      tags:
        - scenario
      operationId: getScenario
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      responses:
        '200':
          description: The metadata of the interaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioContext'
        '404':
          description: There is no such interaction stored
  /scenario/current:
    get:
      summary: Retrieve an interaction
      tags:
        - scenario
      operationId: currentScenario
      responses:
        '200':
          description: The metadata of the interaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioContext'
        '404':
          description: There is no active interaction
  /scenario/{scenarioId}/stop:
    post:
      summary: Stop an interaction
      tags:
        - scenario
      operationId: stopScenario
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: string
              format: date-time
              description: End date of the interaction. If none is specified, the date of submission is used
      responses:
        '200':
          description: The metadata of the interaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioContext'
        '404':
          description: There is no interaction with the given ID
  /scenario/{scenarioId}/gaze:
    post:
      summary: Submit gaze information of the user
      description: The event marks a conscious gaze of the user on the submitted entities in the painting.
      tags:
        - gaze
      operationId: submitGaze
      parameters:
        - $ref: '#/components/parameters/scenarioId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GazeDetection'
      responses:
        '200':
          description: Successfully submitted gaze information
        '403':
          description: The submitted scenario is not active
components:
  parameters:
    scenarioId:
      name: scenarioId
      description: The unique identifier for the interaction
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: "ee6ce14a-94e4-4ddd-ac60-d1e0262f0274"
  schemas:
    ScenarioContext:
      type: object
      description: Contextual meta-data of the interaction
      example:
        start: 2000-01-23T04:56:07.000+00:00
        location: https://example.com/museum
        end: 2000-01-23T04:56:07.000+00:00
        id: ee6ce14a-94e4-4ddd-ac60-d1e0262f0274
        user: https://example.com/ontology/alice
      required:
        - user
        - location
      properties:
        id:
          type: string
          format: uuid
          description: The scenario identifier
        location:
          type: string
          description: IRI of the location where the interaction takes place
        user:
          type: string
          description: IRI identifying the user
        start:
          type: string
          format: date-time
          description: Start date of the interaction
        end:
          type: string
          format: date-time
          description: Start date of the interaction
    Entity:
      type: object
      description: Entity in the knowledge graph
      required:
        - IRI
      properties:
        IRI:
          type: string
        type:
          type: array
          items:
            type: string
        label:
          type: string
      example:
        IRI: https://example.com/ontology/king-tubby
        type:
          - https://example.com/ontology/person
          - https://example.com/ontology/nobel
        label: King Tubby
    GazeDetection:
      type: object
      properties:
        painting:
          type: string
          description: IRI of the painting that is the target of the user gaze
        entities:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          description: IRIs of the entities that are target of the user gaze
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        confidence:
          type: number
          description: Confidence score of the gaze detection as a value in [0, 1]
          default: 1.0
      example:
        painting: https://example.com/image.jpg
        entities:
          - IRI: https://example.com/ontology/king-tubby
            label: King Tubby
          - IRI: https://example.com/ontology/king-george
            label: King George
        boundingBox:
          bottomLeft:
            x: 0.0
            y: 0.0
          topRight:
            x: 1.0
            y: 1.0
        confidence: 1.0
    BoundingBox:
      type: object
      required:
        - bottomLeft
        - topRight
      properties:
        bottomLeft:
          $ref: '#/components/schemas/Coordinate'
        topRight:
          $ref: '#/components/schemas/Coordinate'
      example:
        bottomLeft:
          x: 0.0
          y: 0.0
        topRight:
          x: 1.0
          y: 1.0
    Coordinate:
      type: object
      description: Pixel-Coordinates of a point in the image
      required:
        - x
        - y
      properties:
        x:
          type: number
        y:
          type: number
      example:
        x: 1.0
        y: 2.0